include ../head.pug
body
  header
    div.container
      h1 <span class="h1-span-header">Apex</span> Solutions Group
      nav
         ul 
          li 
            a(href="#") Home
          li 
             a(href="#") About Us 
          li 
           a(href="#") Services 
           li 
            a(href="#") Contact 
          li 
           a(href="http://localhost:3000") Events
          li 
           a.active(href="http://localhost:3000/add") Add Events
  .container.mt-5
    h1 Add <span class="h1-span">Events</span>
    .mb-3
      label(for="eventName" class="form-label") Event Name
      input(type="text" class="form-control" id="eventName" name="eventName" required)
    .mb-3
      label(for="eventDateTime" class="form-label") Event Date/Time
      .input-group.date(id="datetimepicker1" data-target-input="nearest")
        input(type="text" class="form-control datetimepicker-input" data-target="#datetimepicker1" id="eventDateTime" name="eventDateTime" required)
        .input-group-append(data-target="#datetimepicker1" data-toggle="datetimepicker")
          .input-group-text
            i.fas.fa-calendar-alt
    .mb-3
      label(for="place" class="form-label") Place
      input(type="text" class="form-control" id="place" name="place" required)
    .mb-3
      label(for="contactPhone" class="form-label") Contact Phone
      input(type="tel" class="form-control" id="contactPhone" name="contactPhone" required)
    button(type="submit" class="btn btn-primary" onclick="submitForm()") #{mode === 'Update' ? 'Update' : 'Add'}
    span &nbsp;
    button(type="submit" class="btn btn-secondary" onclick="window.location.href='/'") Back to list
  footer 
        h3 Apex Solutions Group
        p.footer-txt This web application was created to fulfill Web Technology moduleâ€™s requirements and does not represent an actual company or service
  script.
    const format = 'DD/MM/YYYY HH:mm'
    const picker = new tempusDominus.TempusDominus(document.getElementById('datetimepicker1'),{
        localization: {
            'locale': 'fr'
        }
    })
    picker.dates.formatInput = function(date) {
        return moment(date).format(format)
    }

    if ("#{mode}" === "Update") {
      const eventData = !{JSON.stringify(eventData || {})}.event;
      document.getElementById('eventName').value = eventData.eventName || '';

      picker.dates.setValue(
        new tempusDominus.DateTime(moment(eventData.eventDateTime, format))
      );

      document.getElementById('place').value = eventData.place || '';
      document.getElementById('contactPhone').value = eventData.contactPhone || '';
    }

    function submitForm() {
      const eventData = {
        eventName: document.getElementById('eventName').value,
        eventDateTime: document.getElementById('eventDateTime').value,
        place: document.getElementById('place').value,
        contactPhone: document.getElementById('contactPhone').value,
      };

      const url = "#{mode}" === "Update" ? `/api/event/${!{JSON.stringify(eventData || {})}.id}` : '/api/event';
      const method = "#{mode}" === "Update" ? 'put' : 'post';

      axios[method](url, eventData).then(response => {
        alert('Success!');
        location.href = '/'
      })
      .catch(error => {
        if(error.response)
          alert(JSON.stringify(error.response.data.errors))
        else
          alert(error)
      });
    }
